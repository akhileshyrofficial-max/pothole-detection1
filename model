import tensorflow as tf
from tensorflow.keras.models import Model
from tensorflow.keras.layers import Input, Conv2D, MaxPooling2D, UpSampling2D, Concatenate

def unet():
    inputs = Input((256, 256, 3))
    
    # Encoder
    conv1 = Conv2D(64, (3,3), activation='relu', padding='same')(inputs)
    conv1 = Conv2D(64, (3,3), activation='relu', padding='same')(conv1)
    pool1 = MaxPooling2D(pool_size=(2, 2))(conv1)

    conv2 = Conv2D(128, (3,3), activation='relu', padding='same')(pool1)
    conv2 = Conv2D(128, (3,3), activation='relu', padding='same')(conv2)
    pool2 = MaxPooling2D(pool_size=(2, 2))(conv2)

    # Decoder
    up1 = UpSampling2D(size=(2, 2))(conv2)
    concat1 = Concatenate()([up1, conv1])
    conv3 = Conv2D(64, (3,3), activation='relu', padding='same')(concat1)
    conv3 = Conv2D(64, (3,3), activation='relu', padding='same')(conv3)

    up2 = UpSampling2D(size=(2, 2))(conv3)
    concat2 = Concatenate()([up2, inputs])
    conv4 = Conv2D(3, (3,3), activation='sigmoid', padding='same')(concat2)

    model = Model(inputs=inputs, outputs=conv4)
    return model
